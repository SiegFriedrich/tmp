//Server間の通信を処理する場合
using Microsoft.AspNetCore.Mvc;
using commonapi.Models;
using commonapi.Shared;
using Microsoft.AspNetCore.Authorization;

[Authorize]
[ApiController]
[Route("api/sys/server")]
public class SysServerController : ControllerBase
{
    [HttpPost("api-control")]
    public ActionResult PostApiControl([FromBody] Operation operation)
    {
        //共通方法を利用してリクエストのヘッダーをチェック
        CommonUtil.ValidateRequestHeader(Request.Headers, CommonUtil.SERVER);
        if (operation.OperationBusinnesId == "SYSTEM" && operation.Status == "0")
        {
            //共通方法を利用してリスポンスにヘッダーを追加
            CommonUtil.AppendServerResponseHeader(Response, "application/json", "nosniff", "SAMEORIGIN", "ISJF9H92S82HFO9CEDWP03OL63E7T6RFW");
            return Ok(new Operation { OperationBusinnesId = "SYSTEM", Status = "0" });
        }
        return Unauthorized();
    }
}

using System.Collections.Generic;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Moq;
using commonapi.Models;
using commonapi.Shared;

namespace YourProject.Tests
{
    [TestClass]
    public class SysServerControllerTests
    {
        [TestMethod]
        public void PostApiControl_ValidOperation_ReturnsOk()
        {
            // 创建模拟的HttpContext
            var httpContextMock = new Mock<HttpContext>();

            // 创建模拟的ControllerContext，将HttpContext设置为模拟的HttpContext
            var controllerContext = new ControllerContext
            {
                HttpContext = httpContextMock.Object
            };

            // 创建控制器实例，将ControllerContext设置为模拟的ControllerContext
            var controller = new SysServerController
            {
                ControllerContext = controllerContext
            };

            // 创建模拟的请求头字典
            var requestHeaders = new HeaderDictionary(new Dictionary<string, StringValues>
            {
                { "Ocp-Apim-Subscription-Key", "subscription-key-value" },
                { "Content-Type", "application/json" },
                { "X-Request-Id", "request-id-value" },
                { "X-Bank-Code", "bank-code-value" },
                { "X-Store-Number-Dept-Code", "store-dept-code-value" },
                { "X-User-Id", "user-id-value" }
            });

            // 创建模拟的HttpRequest，并设置Headers属性
            var httpRequestMock = new Mock<HttpRequest>();
            httpRequestMock.SetupGet(r => r.Headers).Returns(requestHeaders);

            // 设置HttpContext的Request属性为模拟的HttpRequest
            httpContextMock.SetupGet(c => c.Request).Returns(httpRequestMock.Object);

            // 创建模拟的HttpResponse
            var httpResponseMock = new Mock<HttpResponse>();

            // 设置HttpContext的Response属性为模拟的HttpResponse
            httpContextMock.SetupGet(c => c.Response).Returns(httpResponseMock.Object);

            // 创建一个有效的Operation模型
            var validOperation = new Operation { OperationBusinnesId = "SYSTEM", Status = "0" };

            // 执行控制器操作
            var result = controller.PostApiControl(validOperation) as OkObjectResult;

            // 断言结果
            Assert.IsNotNull(result);
            Assert.AreEqual(StatusCodes.Status200OK, result.StatusCode);

            // 这里可以添加更多的断言，例如对响应头的检查
        }

        [TestMethod]
        public void PostApiControl_InvalidOperation_ReturnsUnauthorized()
        {
            // 创建模拟的HttpContext
            var httpContextMock = new Mock<HttpContext>();

            // 创建模拟的ControllerContext，将HttpContext设置为模拟的HttpContext
            var controllerContext = new ControllerContext
            {
                HttpContext = httpContextMock.Object
            };

            // 创建控制器实例，将ControllerContext设置为模拟的ControllerContext
            var controller = new SysServerController
            {
                ControllerContext = controllerContext
            };

            // 创建模拟的请求头字典
            var requestHeaders = new HeaderDictionary(new Dictionary<string, StringValues>
            {
                { "Ocp-Apim-Subscription-Key", "subscription-key-value" },
                { "Content-Type", "application/json" },
                { "X-Request-Id", "request-id-value" },
                { "X-Bank-Code", "bank-code-value" },
                { "X-Store-Number-Dept-Code", "store-dept-code-value" },
                { "X-User-Id", "user-id-value" }
            });

            // 创建模拟的HttpRequest，并设置Headers属性
            var httpRequestMock = new Mock<HttpRequest>();
            httpRequestMock.SetupGet(r => r.Headers).Returns(requestHeaders);

            // 设置HttpContext的Request属性为模拟的HttpRequest
            httpContextMock.SetupGet(c => c.Request).Returns(httpRequestMock.Object);

            // 创建一个无效的Operation模型
            var invalidOperation = new Operation { OperationBusinnesId = "INVALID", Status = "1" };

            // 执行控制器操作
            var result = controller.PostApiControl(invalidOperation) as UnauthorizedResult;

            // 断言结果
            Assert.IsNotNull(result);
            Assert.AreEqual(StatusCodes.Status401Unauthorized, result.StatusCode);
        }
    }
}




C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(20,82): error CS0246: 型または名前空間の名前 'StringValues' が見つかりま
せんでした (using ディレ
クティブまたはアセンブリ参照が指定されていることを確認してください) [C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]      
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(22,17): error CS1950: コレクション初期化子に最も適しているオーバーロード
 Add メソッド 'Dictionary<st
ring, StringValues>.Add(string, StringValues)' には無効な引数がいくつか含まれています [C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(22,48): error CS1503: 引数 2: は 'string' から 'StringValues' へ変換する
ことはできません
[C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(23,17): error CS1950: コレクション初期化子に最も適しているオーバーロード
 Add メソッド 'Dictionary<st
ring, StringValues>.Add(string, StringValues)' には無効な引数がいくつか含まれています [C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(23,35): error CS1503: 引数 2: は 'string' から 'StringValues' へ変換する
ことはできません
[C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(24,17): error CS1950: コレクション初期化子に最も適しているオーバーロード
 Add メソッド 'Dictionary<st
ring, StringValues>.Add(string, StringValues)' には無効な引数がいくつか含まれています [C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(24,35): error CS1503: 引数 2: は 'string' から 'StringValues' へ変換する
ことはできません
[C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(25,17): error CS1950: コレクション初期化子に最も適しているオーバーロード
 Add メソッド 'Dictionary<st
ring, StringValues>.Add(string, StringValues)' には無効な引数がいくつか含まれています [C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(25,34): error CS1503: 引数 2: は 'string' から 'StringValues' へ変換する
ことはできません
[C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(26,17): error CS1950: コレクション初期化子に最も適しているオーバーロード
 Add メソッド 'Dictionary<st
ring, StringValues>.Add(string, StringValues)' には無効な引数がいくつか含まれています [C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(26,47): error CS1503: 引数 2: は 'string' から 'StringValues' へ変換する
ことはできません
[C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(27,17): error CS1950: コレクション初期化子に最も適しているオーバーロード
 Add メソッド 'Dictionary<st
ring, StringValues>.Add(string, StringValues)' には無効な引数がいくつか含まれています [C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(27,32): error CS1503: 引数 2: は 'string' から 'StringValues' へ変換する
ことはできません
[C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
C:\temp\tokensample\tokensample\commonapi.Tests\Tests\ServerReqResTest.cs(34,34): error CS1729: 'SysServerController' には、引数 2 を指定するコン 
ストラクターは含まれてい
ません [C:\temp\tokensample\tokensample\commonapi.Tests\commonapi.Tests.csproj]
